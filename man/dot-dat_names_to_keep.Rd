% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matsindf_apply.R
\name{.dat_names_to_keep}
\alias{.dat_names_to_keep}
\title{Tell which \code{.dat} arguments to keep}
\usage{
.dat_names_to_keep(.dat = NULL, FUN, ...)
}
\arguments{
\item{.dat}{The \code{.dat} argument to \code{matsindf_apply()}.}

\item{dots}{The \code{...} argument to \code{matsindf_apply()}, as a list.}
}
\value{
A vector of names of \code{.dat} arguments to keep.
}
\description{
The logic for deciding which arguments of \code{.dat} are kept
is somewhat complex.
This function abstracts pulls all of that code in one place.
}
\details{
For the name of each argument in \code{.dat}, the following table
decides whether that argument should be kept:

\tabular{cccl}{
in \code{names(...)}   \tab  in string values of \code{...}   \tab decision  \tab reason \cr
no                \tab  yes or no                   \tab keep      \tab will not be replaced  \cr
yes or no         \tab  yes                         \tab keep      \tab will be renamed       \cr
yes               \tab  no                          \tab delete    \tab will be replaced      \cr
}
}
\examples{
example_fun <- function(a, b) {c(c = a + b, d = a - b)}
# Keeps all items in .dat, because there no items in ...
# that take precedence.
matsindf:::.dat_names_to_keep(.dat = list(a = 2, b = 1, z = 42),
                              FUN = example_fun)
# Keeps "b" and "z", because
# "a" is referenced to "z"
matsindf:::.dat_names_to_keep(.dat = list(a = 2, b = 1, z = 42),
                              FUN = example_fun,
                              a = "z")
}
