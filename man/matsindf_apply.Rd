% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matsindf_apply.R
\name{matsindf_apply}
\alias{matsindf_apply}
\title{Apply a function to a \code{matsindf} data frame (and more)}
\usage{
matsindf_apply(.DF = NULL, FUN, ...)
}
\arguments{
\item{.DF}{the \code{matsindf} data frame}

\item{FUN}{the function to be applied to \code{.DF}}

\item{...}{named arguments to be passed by name to \code{FUN}.}
}
\value{
a named list or a data frame. (See details.)
}
\description{
Applies \code{FUN} to \code{.DF} or
performs the calculation specified by \code{FUN}
on numbers or matrices.
\code{FUN} must return a named list.
}
\details{
If \code{...} are all named numbers or matrices
of the form \code{argname = m},
\code{.DF} is ignored, and
\code{m}s are passed to \code{FUN} by \code{argname}s.
The return value is a named list provided by \code{FUN}.

If \code{...} are all lists of numbers or matrices
of the form \code{argname = l},
\code{.DF} is ignored, and
\code{FUN} is \code{Map}ped across the various \code{l}s
to obtain a list of named lists returned from \code{FUN}.
The return value is a data frame
whose rows are the named lists returned from \code{FUN} and
whose column names are the names of the list items returned from \code{FUN}.
The series of named lists are \code{rbind}-ed to create the output data frame.
Columns of \code{.DF} are not present in the return value.

If \code{...} are all named character strings
of the form \code{argname = string},
\code{.DF} is required,
\code{argname}s are expected to be names of arguments to \code{FUN}, and
\code{string}s are expected to be column names in \code{.DF}.
The return value is \code{.DF} with additional columns (at right)
whose names are the names of list items returned from \code{FUN}.
}
\examples{
example_fun <- function(a, b){
  return(list(c = sum_byname(a, b), d = difference_byname(a, b)))
}
# Single values for arguments
matsindf_apply(FUN = example_fun, a = 2, b = 2)
# Matrices for arguments
a <- 2 * matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE,
              dimnames = list(c("r1", "r2"), c("c1", "c2")))
b <- 0.5 * a
matsindf_apply(FUN = example_fun, a = a, b = b)
# Single values in lists
matsindf_apply(FUN = example_fun, a = list(2, 2), b = list(1, 2))
# Matrices in lists
matsindf_apply(FUN = example_fun, a = list(a, a), b = list(b, b))
# Single numbers in a data frame
DF <- data.frame(a = c(4, 4, 5), b = c(4, 4, 4))
matsindf_apply(DF, FUN = example_fun, a = "a", b = "b")
# Matrices in data frames (matsindf)
DF2 <- data.frame(a = I(list(a, a)), b = I(list(b,b)))
matsindf_apply(DF2, FUN = example_fun, a = "a", b = "b")
}
